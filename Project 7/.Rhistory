y = uninsured_rate,
color = State), size = 0.5) +
# add in line layer
geom_line(aes(x = year,
y = uninsured_rate,
color = State)) +
# add a horizontal line
geom_vline(aes(xintercept = 2014), linetype = "dotted") +
# themes
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
scale_x_continuous(breaks = seq(2008,2020,2)) +
# labels
ggtitle('Oklahoma and Louisiana Parallel Trends') +
xlab('Year') +
ylab('Uninsured Rate')
# Parallel Trends plot
# filter out Massachusetts and states that adopted prior to 2014 and after 2015
# ----------------------------------------------------------------
medicaid_expansion %>%
# process
# ---------
filter(State %in% c("Iowa","Missouri")) %>%
# plotting all of the time periods -- not filtering out any of them
# plot
# ---------
ggplot() +
# add in point layer
geom_point(aes(x = year,
y = uninsured_rate,
color = State), size = 0.5) +
# add in line layer
geom_line(aes(x = year,
y = uninsured_rate,
color = State)) +
# add a horizontal line
geom_vline(aes(xintercept = 2014), linetype = "dotted") +
# themes
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
scale_x_continuous(breaks = seq(2008,2020,2)) +
# labels
ggtitle('Oklahoma and Louisiana Parallel Trends') +
xlab('Year') +
ylab('Uninsured Rate')
# Parallel Trends plot
# filter out Massachusetts and states that adopted prior to 2014 and after 2015
# ----------------------------------------------------------------
medicaid_expansion %>%
# process
# ---------
filter(State %in% c("Iowa","Kansas")) %>%
# plotting all of the time periods -- not filtering out any of them
# plot
# ---------
ggplot() +
# add in point layer
geom_point(aes(x = year,
y = uninsured_rate,
color = State), size = 0.5) +
# add in line layer
geom_line(aes(x = year,
y = uninsured_rate,
color = State)) +
# add a horizontal line
geom_vline(aes(xintercept = 2014), linetype = "dotted") +
# themes
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
scale_x_continuous(breaks = seq(2008,2020,2)) +
# labels
ggtitle('Oklahoma and Louisiana Parallel Trends') +
xlab('Year') +
ylab('Uninsured Rate')
# Parallel Trends plot
# filter out Massachusetts and states that adopted prior to 2014 and after 2015
# ----------------------------------------------------------------
medicaid_expansion %>%
# process
# ---------
filter(State %in% c("Arkansas","Oklahoma")) %>%
# plotting all of the time periods -- not filtering out any of them
# plot
# ---------
ggplot() +
# add in point layer
geom_point(aes(x = year,
y = uninsured_rate,
color = State), size = 0.5) +
# add in line layer
geom_line(aes(x = year,
y = uninsured_rate,
color = State)) +
# add a horizontal line
geom_vline(aes(xintercept = 2014), linetype = "dotted") +
# themes
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
scale_x_continuous(breaks = seq(2008,2020,2)) +
# labels
ggtitle('Oklahoma and Louisiana Parallel Trends') +
xlab('Year') +
ylab('Uninsured Rate')
# Parallel Trends plot
# filter out Massachusetts and states that adopted prior to 2014 and after 2015
# ----------------------------------------------------------------
medicaid_expansion %>%
# process
# ---------
filter(State %in% c("Arkansas","Oklahoma")) %>%
# plotting all of the time periods -- not filtering out any of them
# plot
# ---------
ggplot() +
# add in point layer
geom_point(aes(x = year,
y = uninsured_rate,
color = State), size = 0.5) +
# add in line layer
geom_line(aes(x = year,
y = uninsured_rate,
color = State)) +
# add a horizontal line
geom_vline(aes(xintercept = 2014), linetype = "dotted") +
# themes
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
scale_x_continuous(breaks = seq(2008,2020,2)) +
# labels
ggtitle('Arkansas and Oklahoma Parallel Trends') +
xlab('Year') +
ylab('Uninsured Rate')
# Difference-in-Differences estimation
medicaid_expansion_states <-
medicaid_expansion %>%
mutate(treatment = case_when(State == "Arkansas" & year >= 2014 ~ 1, TRUE ~ 0)) %>%
filter(State %in% c("Arkansas", "Oklahoma"))
medicaid_expansion <-
medicaid_expansion %>%
mutate(treatment = case_when(State == "Arkansas" & year >= 2014 ~ 1, TRUE ~ 0))
# multisynth model states
multi <- medicaid_expansion %>%
filter(State != "District of Columbia") %>%
mutate(treated = ifelse(year >= year(Date_Adopted), 1, 0))
# pre-treatment difference
pre_diff <- medicaid_expansion %>%
# filter out only the quarter we want
filter(year == 2013) %>%
# subset to select only vars we want
select(State,
uninsured_rate) %>%
# make the data wide
pivot_wider(names_from = State,
values_from = uninsured_rate) %>%
# subtract to make calculation
summarise(Oklahoma - Arkansas)
# post-treatment difference
# ----------
post_diff <-
medicaid_expansion %>%
# filter out only the quarter we want
filter(year == 2015) %>%
# subset to select only vars we want
select(State,
uninsured_rate) %>%
# make the data wide
pivot_wider(names_from = State,
values_from = uninsured_rate) %>%
# subtract to make calculation
summarise(Oklahoma - Arkansas)
# diff-in-diffs
# ----------
diff_in_diffs <- post_diff - pre_diff
diff_in_diffs
# non-augmented synthetic control
syn <-                              # save object
augsynth(uninsured_rate ~ treatment, # treatment - use instead of treated bc latter codes 2012.25 as treated
State,     # unit
year,  # time
medicaid_expansion,    # data
progfunc = "None",       # plain syn control
scm = T)                 # synthetic control
# Plot results
plot(syn)
#Also report the average ATT and L2 imbalance
summary_stats <- summary(syn)
#Also report the average ATT and L2 imbalance
summary_stats <- summary(syn)
summary_stats
# augmented synthetic control
# recalculate with Ridge function that penalizes really high weights
# ----------------------------------------------------------------
ridge_syn <-
augsynth(uninsured_rate ~ treatment,
State,     # unit
year,  # time
medicaid_expansion,
progfunc = "ridge",  # specify
scm = T)
summary(ridge_syn)
# Average ATT Estimate (p Value for Joint Null):  -0.00828   ( 0.052 )
# L2 Imbalance: 0.001
# barplots of weights
data.frame(syn$weights) %>% # coerce to data frame since it's in vector form
# process
# ---------
# change index to a column
tibble::rownames_to_column('State') %>% # move index from row to column (similar to index in row as in Python)
filter(syn.weights > 0) %>% # filter out weights less than 0
# ---------
ggplot() +
# stat = identity to take the literal value instead of a count for geom_bar()
geom_bar(aes(x = State,
y = syn.weights),
stat = 'identity') +  # override count() which is default of geom_bar(), could use geom_col() instead
coord_flip() +   # flip to make it more readable
# themes
theme_fivethirtyeight() +
theme(axis.title = element_text()) +
# labels
ggtitle('Synthetic Control Weights') +
xlab('State') +
ylab('Weight')
# multisynth model states
# ppool_syn <- multisynth(uninsured_rate ~ treated,
#                         State,                       # unit
#                         year,                        # time
#                         nu = 0.5,                    # varying degree of pooling
#                         multi, # data
#                         n_leads = 10)                # post-treatment periods to estimate
# with default nu
# ---------
ppool_syn <- multisynth(uninsured_rate ~ treated,
State,                        # unit
year,                         # time
multi,  # data
n_leads = 10)                 # post-treatment periods to estimate
# view results
print(ppool_syn$nu)
ppool_syn
ppool_syn_summ <- summary(ppool_syn)
# Specify small subset
desired_levels <- c("Alaska", "Arkansas","Alabama", "California", "Colorado", "Ohio", "Massachusetts", "Oklahoma", "Colorado")  # Add the desired levels here
# Filter data for the desired states
filtered_data <- ppool_syn_summ$att %>%
filter(Level %in% desired_levels)
# Plot
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point() +
geom_line() +
geom_vline(xintercept = 0) +
theme_fivethirtyeight() +
theme(axis.title = element_text(),
legend.position = "bottom") +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate Estimate')
# plot actual estimates not values of synthetic controls - use a facet_wrap for readability
# ---------
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point() +
geom_line() +
geom_vline(xintercept = 0) +
theme_fivethirtyeight() +
theme(axis.title = element_text(),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rates Estimate') +
facet_wrap(~Level)   # facet-wrap by level (state in this case) for clearer presentation
# multisynth model time cohorts
ppool_syn_time <- multisynth(uninsured_rate ~ treated,
State,
year,
multi,
n_leads = 10,
time_cohort = TRUE)           # time cohort set to TRUE
# save summary
ppool_syn_time_summ <- summary(ppool_syn_time)
# view
ppool_syn_time_summ
ppool_syn_time_summ$att %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point() +
geom_line() +
geom_vline(xintercept = 0) +
theme_fivethirtyeight() +
theme(axis.title = element_text(),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate') +
facet_wrap(~Level)
# Plot
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point() +
geom_line() +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate Estimate')
# Plot
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point(size = 0.5) +
geom_line() +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate Estimate')
# Plot
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point(size = 0.5) +
geom_line() +
geom_vline(xintercept = 0, linetype="dotted") +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"))+
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate Estimate')
# plot actual estimates not values of synthetic controls - use a facet_wrap for readability
# ---------
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point() +
geom_line() +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rates Estimate') +
facet_wrap(~Level)   # facet-wrap by level (state in this case) for clearer presentation
# plot actual estimates not values of synthetic controls - use a facet_wrap for readability
# ---------
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point() +
geom_line() +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rates Estimate') +
facet_wrap(~Level)   # facet-wrap by level (state in this case) for clearer presentation
# plot actual estimates not values of synthetic controls - use a facet_wrap for readability
# ---------
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point(size = 0.5) +
geom_line() +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rates Estimate') +
facet_wrap(~Level)   # facet-wrap by level (state in this case) for clearer presentation
# multisynth model time cohorts
ppool_syn_time <- multisynth(uninsured_rate ~ treated,
State,
year,
multi,
n_leads = 10,
time_cohort = TRUE)           # time cohort set to TRUE
# save summary
ppool_syn_time_summ <- summary(ppool_syn_time)
# view
ppool_syn_time_summ
ppool_syn_time_summ$att %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point() +
geom_line() +
geom_vline(xintercept = 0) +
theme_fivethirtyeight() +
theme(axis.title = element_text(),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate') +
facet_wrap(~Level)
ppool_syn_time_summ$att %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point(size = 0.5) +
geom_line() +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate') +
facet_wrap(~Level)
# plot actual estimates not values of synthetic controls - use a facet_wrap for readability
# ---------
filtered_data %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point(size = 0.5) +
geom_line() +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rates Estimate') +
facet_wrap(~Level)   # facet-wrap by level (state in this case) for clearer presentation
ppool_syn_time_summ$att %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point(size = 0.5) +
geom_line(linetype="dotted") +
geom_vline(xintercept = 0) +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate') +
facet_wrap(~Level)
ppool_syn_time_summ$att %>%
ggplot(aes(x = Time, y = Estimate, color = Level)) +
geom_point(size = 0.5) +
geom_line() +
geom_vline(xintercept = 0, linetype = "dotted") +
theme_minimal() +
theme(plot.caption = element_text(hjust = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "grey", size = .1),
panel.spacing = unit(3, "lines"),
legend.position = 'None') +
ggtitle('Synthetic Controls for State Medicaid Expansion') +
xlab('Time') +
ylab('Uninsured Rate') +
facet_wrap(~Level)
